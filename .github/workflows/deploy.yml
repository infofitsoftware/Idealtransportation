name: Deploy to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Frontend Dependencies
      working-directory: ./src
      run: |
        npm ci
        npm run build
      env:
        NEXT_PUBLIC_API_URL: http://${{ secrets.EC2_HOST }}/api

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install "pydantic[email]"
        pip install -r requirements.txt

    - name: Run Backend Tests
      working-directory: ./backend
      run: pytest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Function to check if a command exists
          command_exists() {
            command -v "$1" >/dev/null 2>&1
          }

          # Install required packages
          echo "Installing required packages..."
          sudo apt-get update
          sudo apt-get install -y git nodejs npm python3-pip python3-venv nginx

          # Create application directory
          echo "Setting up application directory..."
          sudo mkdir -p /home/ubuntu/ideal-transportation
          sudo chown -R ubuntu:ubuntu /home/ubuntu/ideal-transportation
          cd /home/ubuntu/ideal-transportation

          # Clone repository
          echo "Cloning repository..."
          if [ ! -d ".git" ]; then
            git clone git@github.com:${{ github.repository }}.git .
          else
            git fetch origin
            git reset --hard origin/main
          fi

          # Setup backend
          echo "Setting up backend..."
          cd backend
          
          # Create virtual environment
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install dependencies
          source venv/bin/activate
          pip install --upgrade pip
          pip install "pydantic[email]"
          pip install -r requirements.txt

          # Setup systemd service
          echo "Setting up systemd service..."
          sudo tee /etc/systemd/system/ideal-transportation.service << 'EOF'
          [Unit]
          Description=Ideal Transportation Backend
          After=network.target

          [Service]
          User=ubuntu
          WorkingDirectory=/home/ubuntu/ideal-transportation/backend
          Environment="PATH=/home/ubuntu/ideal-transportation/backend/venv/bin"
          Environment="DATABASE_URL=${{ secrets.DATABASE_URL }}"
          Environment="SECRET_KEY=${{ secrets.SECRET_KEY }}"
          ExecStart=/home/ubuntu/ideal-transportation/backend/venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000
          Restart=always

          [Install]
          WantedBy=multi-user.target
          EOF

          # Enable and restart service
          sudo systemctl daemon-reload
          sudo systemctl enable ideal-transportation
          sudo systemctl restart ideal-transportation

          # Setup frontend
          echo "Setting up frontend..."
          cd ../src
          npm ci
          npm run build

          # Setup nginx
          echo "Setting up nginx..."
          sudo tee /etc/nginx/sites-available/ideal-transportation << 'EOF'
          server {
              listen 80;
              server_name _;  # Accepts any hostname/IP

              # Frontend
              location / {
                  root /home/ubuntu/ideal-transportation/src/out;
                  try_files $uri $uri/ /index.html;
              }

              # Backend API
              location /api/ {
                  proxy_pass http://localhost:8000/;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }
          EOF

          # Enable nginx site
          sudo ln -sf /etc/nginx/sites-available/ideal-transportation /etc/nginx/sites-enabled/
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo nginx -t
          sudo systemctl restart nginx

          echo "Deployment completed successfully!"

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }} 